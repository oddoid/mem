#!/usr/bin/env bash
set -euo pipefail

dist_dir=dist
char_dir="$dist_dir/char"
sheet_dir="$dist_dir"

# Render a 10x bmp for every character. See also aseprite10x_sheet.
#
# $1 font (Aseprite file stem)
#
# - The characters are 10x for accurate tracing.
# - All padding is 10x to match the rendering scale.
# - Empty character frames are not output as this causes potrace to print a
#   warning. aseprite10x_sheet and aseprite10x_chars could be combined
#   otherwise.
# - The bmps use the index 0 background color (without transparency) so that
#   should be white for potrace.
aseprite10x_chars() {
  aseprite \
    -b \
    --filename-format "$char_dir/{tag}-10x.bmp" \
    --inner-padding 10 \
    --ignore-empty \
    "src/$1.aseprite" \
    --scale 10 \
    --save-as /dev/null
}

# Render a 10x spritesheet PNG and its Aseprite metadata JSON. See also
# aseprite10x_chars.
#
# $1 font (Aseprite file stem)
#
# - The sheets are 10x for the readme.
# - Sheet characters are in ASCII order and missing characters are represented.
# - All padding is 10x to match the rendering scale.
aseprite10x_sheet() {
  aseprite \
    -b \
    --list-tags \
    --inner-padding 10 \
    --sheet-pack \
    --sheet-type rows \
    --sheet "$sheet_dir/$1-10x-sheet.png" \
    --data "$sheet_dir/$1-10x-sheet.json" \
    --sheet-columns 16 \
    --sheet-rows 16 \
    "src/$1.aseprite" \
    --scale 10
}

# Render a 1x spritesheet PNG and its Aseprite metadata JSON
#
# $1 font (Aseprite file stem)
#
# - The sheets are for game use.
# - Sheet characters are in ASCII order and missing characters are represented.
# - Characters are each padded by 1 pixel.
aseprite1x() {
  aseprite \
  -b \
  --list-tags \
  --inner-padding 1 \
  --sheet-pack \
  --sheet-type rows \
  --sheet "$sheet_dir/$1-sheet.png" \
  --data "$sheet_dir/$1-sheet.json" \
  --sheet-columns 16 \
  --sheet-rows 16 \
  "src/$1.aseprite"
}

# No intermediate build support. Clean and remake the build directory every
# time.
rm -rf "$dist_dir"
mkdir -p "$dist_dir" "$char_dir" "$sheet_dir"

# Copy the font metadata JSON files directly into the dist folder without
# alteration.
cp -a src/*.json "$dist_dir"

for aseprite_filename in src/*.aseprite; do
  font="$(basename "$aseprite_filename" .aseprite)"

  aseprite10x_sheet "$font"
  aseprite10x_chars "$font"
  aseprite1x "$font"

  for char in "$char_dir/$font-"*-10x.bmp; do
    # Convert each bmp to an SVG.
    potrace -sa 0 -O 0 -o "${char%.bmp}.svg" "$char"
  done

  # Generate a FontForge font from the SVGs.
  bin/fontforge-import \
    "$dist_dir/$font.sfd" \
    "src/$font.json" \
    "$char_dir/$font-"*.svg

  # Strip the creation and modification times for repeatable builds.
  sed -ri 's%(Creation|Modification)Time: [0-9]+%\1Time: 0%' dist/*.sfd

  # Generate a TrueType font.
  fontforge -quiet -c "
font = fontforge.open('dist/$font.sfd')
font.generate('dist/$font.ttf', flags=('opentype', 'winkern', 'old-kern'))
  "

  ttfdump -o "$dist_dir/$font.ttfdump" "$dist_dir/$font.ttf"
done
